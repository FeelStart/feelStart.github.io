<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IOS on 加蛋加葱花～</title>
    <link>http://localhost:1313/tags/ios/</link>
    <description>Recent content in IOS on 加蛋加葱花～</description>
    <generator>Hugo</generator>
    <language> zh_CN</language>
    <lastBuildDate>Tue, 30 Jan 2024 10:37:16 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IOS耳机控制音频</title>
      <link>http://localhost:1313/posts/ios%E8%80%B3%E6%9C%BA%E6%8E%A7%E5%88%B6%E9%9F%B3%E9%A2%91/</link>
      <pubDate>Tue, 30 Jan 2024 10:37:16 +0800</pubDate>
      <guid>http://localhost:1313/posts/ios%E8%80%B3%E6%9C%BA%E6%8E%A7%E5%88%B6%E9%9F%B3%E9%A2%91/</guid>
      <description>代码 import MediaPlayer @objc public protocol MediaPlayerCommandCenterObserver: NSObjectProtocol { @objc optional func mediaPlayerCommandCenterPlay(_ center: MediaPlayerCommandCenter) @objc optional func mediaPlayerCommandCenterPause(_ center: MediaPlayerCommandCenter) } public class MediaPlayerCommandCenter: NSObject { @objc public static let shared = MediaPlayerCommandCenter() private let observers = NSPointerArray.weakObjects() public override init() { super.init() let center = MPRemoteCommandCenter.shared() center.playCommand.addTarget { [weak self] _ in guard let self else { return .commandFailed } self.enumerateObservers { observer, _ in if let observer, observer.</description>
    </item>
    <item>
      <title>Ios_apple_intent</title>
      <link>http://localhost:1313/posts/ios_apple_intent/</link>
      <pubDate>Fri, 17 Nov 2023 18:48:53 +0800</pubDate>
      <guid>http://localhost:1313/posts/ios_apple_intent/</guid>
      <description>iOS 开发 intents Intens 在主项目创建 Intent 目录。&#xA;创建打开的 Intent：&#xA;struct MainIntent: AppIntent { static var title: LocalizedStringResource = &amp;#34;MainIntent&amp;#34; static var openAppWhenRun: Bool = true @MainActor func perform() async throws -&amp;gt; some IntentResult { return .result() } } /// 快捷指令（可以在 Shortcut APP 上展示） struct OpenShortcutProvider: AppShortcutsProvider { static var appShortcuts: [AppShortcut] { AppShortcut(intent: MainIntent() , phrases: [&amp;#34;Open \(.applicationName)&amp;#34;], shortTitle: &amp;#34;Open App&amp;#34;, systemImageName: &amp;#34;&amp;#34;) } } 唤醒 APP 方案 1：通过 Intent 唤起 App 后，复用现有的链接打开页面逻辑，调用 OpenURL 打开对应的页面。</description>
    </item>
  </channel>
</rss>
