<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读书笔记 on 加蛋加葱花～</title>
    <link>http://localhost:1313/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 读书笔记 on 加蛋加葱花～</description>
    <generator>Hugo</generator>
    <language> zh_CN</language>
    <lastBuildDate>Sat, 10 Aug 2024 12:02:19 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《大型网站技术架构》读书笔记</title>
      <link>http://localhost:1313/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 10 Aug 2024 12:02:19 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/</guid>
      <description>读书笔记-《大型网站技术架构》 这是 2012 年写的书，作者是李智慧，曾在阿里担任技术专家，参加阿里基础平台的开发和架构工作。&#xA;1.1 大型网站的特点 高并发，大流量&#xA;高可用&#xA;海量数据&#xA;用户分布广，网络状况复杂&#xA;安全环境恶劣&#xA;需求快速变更，发布频繁&#xA;渐进式发展（从小网站到大网站）&#xA;1.2 误区 一味追寻大厂的解决方案 大厂的解决方案值得我们去借鉴，我们也要有自己坚持的勇气，才能在技术架构中不断地进步。&#xA;为了技术而技术 网站技术是为业务存在的。&#xA;企图用技术解决所有问题 比如 12306 购票，高峰期时的并发是很高的。真正解决问题不在技术架构，而是业务架构。比如，引进排队机制，分时段购票等等。&#xA;2 架构模式 2.1 分层 分层结构在计算机世界无处不在，网络的 7 层通信协议是一种分层结构。大型网站也采用分层结构，可分为应用层，服务层，数据层。&#xA;应用层 负责业务和视图展示&#xA;服务层 用户管理，订单管理等等&#xA;数据层 数据库，缓存，文件，搜索引擎等等&#xA;分层之间要确定合理的边界和接口，开发的过程中严格遵循分层结构的约束，禁止跨层调用。&#xA;2.2 分割 将不同的功能和服务分割开来，包装成高内聚低耦合的模块。一方面有助于开发和维护，另一方面方便将不同的模块分布式部署，提高网站的并发能力和扩展能力。&#xA;2.3 分布式 分层和分割的一个主要的目的是为了切分后的模块便于分布式部署。&#xA;常用分布式方案有：&#xA;分布式应用和服务&#xA;分布式静态资源&#xA;分布式数据和储存&#xA;分布式计算&#xA;2.4 集群 多台服务器部署相同的应用构成集群，提高并发性和可用性。&#xA;2.5 缓存 CDN （服务商）&#xA;反向代理（内部服务器）&#xA;本地缓存&#xA;分布式缓存&#xA;2.6 异步 特性：&#xA;提高系统的可用性 消费者故障后，数据会在消息队列服务器堆积，生产者可以继续服务。消费者恢复后，可以再次从消息队列中获取到数据。&#xA;提高响应速度 2.7 冗余 2.8 自动化 自动化有以下的方面：&#xA;发布</description>
    </item>
  </channel>
</rss>
